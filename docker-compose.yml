version: "3.9"
services:
  gateway:
    container_name: gateway
    build: ./Gateway
    ports:
      - "5000:5000"
  discoveryService:
    container_name: discoveryService
    build: ./DicoveryService
    ports:
      - "9000:9000"
    image: dicovery-service
    depends_on:
      - gateway
      - elasticsearch
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  authService:
    container_name: authService
    build: ./AuthService
    ports:
      - "6000:6000"
    image: auth-service
    depends_on:
      - discoveryService
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  cacheService:
    container_name: cacheService
    build: ./CacheService
    ports:
      - "7000:7000"
    image: cache-service
    depends_on:
      - discoveryService
      - redis-sentinel
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh

  adminService:
    container_name: adminService
    build: ./AdminService
    ports:
      - "4000:4000"
    image: admin-service
    depends_on:
      - authService
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh

  customerService:
    container_name: customerService
    build: ./CustomerService
    ports:
      - "3000:3000"
    image: customer-service
    depends_on:
      - discoveryService
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh

  sqlServer:
    container_name: sqlServer
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "123Qwerty_"
      ACCEPT_EULA: "Y"

  redis-master:
    container_name: redis-master
    image: bitnami/redis
    restart: always
    environment:
      # - ALLOW_EMPTY_PASSWORD=yes
      # - REDIS_PORT=6379
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=my_master_password
    ports:
      - "6379:6379"
    # command: redis-server --save 20 1 --loglevel warning

  redis-replica-1:
    container_name: redis-replica-1
    image: bitnami/redis
    restart: always
    environment:
      # - ALLOW_EMPTY_PASSWORD=yes
      # - REDIS_PORT=6379
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_MASTER_PASSWORD=my_master_password
      - REDIS_PASSWORD=my_master_password
    depends_on:
      - redis-master
    ports:
      - "6380:6379"
    links:
      - redis-master
    # command: redis-server --slaveof redis-master 6379 --save 20 1 --loglevel warning

  redis-replica-2:
    container_name: redis-replica-2
    image: bitnami/redis
    restart: always
    environment:
      # - ALLOW_EMPTY_PASSWORD=yes
      # - REDIS_PORT=6379
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_MASTER_PASSWORD=my_master_password
      - REDIS_PASSWORD=my_master_password
    depends_on:
      - redis-master
    ports:
      - "6381:6379"
    links:
      - redis-master

  redis-sentinel:
    container_name: redis-sentinel
    build: redis-sentinel
    environment:
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=500
      - SENTINEL_QUORUM=2
      # - REDIS_MASTER_HOST=redis-master
      # - REDIS_SENTINEL_FAILOVER_TIMEOUT=20000
      # - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=20000
      # - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
      # - REDIS_MASTER_PASSWORD=my_master_password
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    ports:
      - "26379:26379"
    links:
      - redis-master

  redis-sentinel-1:
    container_name: redis-sentinel-1
    build: redis-sentinel
    environment:
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=500
      - SENTINEL_QUORUM=2
      # - REDIS_MASTER_HOST=redis-master
      # - REDIS_SENTINEL_FAILOVER_TIMEOUT=20000
      # - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=20000
      # - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
      # - REDIS_MASTER_PASSWORD=my_master_password
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    ports:
      - "26380:26379"
    links:
      - redis-master

  redis-sentinel-2:
    container_name: redis-sentinel-2
    build: redis-sentinel
    environment:
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=500
      - SENTINEL_QUORUM=2
      # - REDIS_MASTER_HOST=redis-master
      # - REDIS_SENTINEL_FAILOVER_TIMEOUT=20000
      # - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=20000
      # - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
      # - REDIS_MASTER_PASSWORD=my_master_password
      # - REDIS_MASTER_SET=redis-replica-2
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    ports:
      - "26381:26379"
    links:
      - redis-master

  redis-sentinel-3:
    container_name: redis-sentinel-3
    build: redis-sentinel
    environment:
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=500
      - SENTINEL_QUORUM=2
      # - REDIS_MASTER_HOST=redis-master
      # - REDIS_SENTINEL_FAILOVER_TIMEOUT=20000
      # - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=20000
      # - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
      # - REDIS_MASTER_PASSWORD=my_master_password
      # - REDIS_MASTER_SET=redis-replica-2
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    ports:
      - "26382:26379"
    links:
      - redis-master

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200

volumes:
  elasticsearch-data:
