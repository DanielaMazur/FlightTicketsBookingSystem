version: "3.9"
services:
  gateway:
    container_name: gateway
    build: ./Gateway
    ports:
      - "5000:5000"
  discoveryService:
    container_name: discoveryService
    build: ./DicoveryService
    ports:
      - "9000:9000"
    image: dicovery-service
    depends_on:
      - gateway
      - elasticsearch
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  authService:
    container_name: authService
    build: ./AuthService
    ports:
      - "6000:6000"
    image: auth-service
    depends_on:
      - discoveryService
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  cacheService:
    container_name: cacheService
    build: ./CacheService
    ports:
      - "7000:7000"
    image: cache-service
    depends_on:
      - discoveryService
    environment:
      - ASPNETCORE_URLS=http://+:7000
      - app_port=7000
      - app_host=http://cacheService:7000
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  cacheService2:
    container_name: cacheService2
    build: ./CacheService
    ports:
      - "7001:7000"
    image: cache-service
    depends_on:
      - discoveryService
    environment:
      - ASPNETCORE_URLS=http://+:7000
      - app_host=http://cacheService2:7000
      - app_port=7000
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  cacheService3:
    container_name: cacheService3
    build: ./CacheService
    ports:
      - "7002:7000"
    image: cache-service
    depends_on:
      - discoveryService
    environment:
      - ASPNETCORE_URLS=http://+:7000
      - app_port=7000
      - app_host=http://cacheService3:7000
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh

  adminService:
    container_name: adminService
    build: ./AdminService
    ports:
      - "4000:4000"
    image: admin-service
    depends_on:
      - authService
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  customerService:
    container_name: customerService
    build: ./CustomerService
    ports:
      - "3000:3000"
    image: customer-service
    depends_on:
      - discoveryService
    volumes:
      - ./wait-for-it.sh:/root/wait-for-it.sh
  sqlServer:
    container_name: sqlServer
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "123Qwerty_"
      ACCEPT_EULA: "Y"
  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: always
    environment:
      - REDIS_PASSWORD=RRnFPZ93tjBHB9W62p
      - REDIS_PORT=6379
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200

volumes:
  elasticsearch-data:
